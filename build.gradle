buildscript {
    ext.kotlin_version = "1.4.21"

    repositories {
        google()
//        jcenter()
        mavenCentral()

        //国内镜像
        maven {
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven {
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }

        maven { url "https://jitpack.io" }
        //HMS
        maven { url 'https://developer.huawei.com/repo/' }

        maven { url 'https://repo1.maven.org/maven2/' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:7.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        //ARouter 提供的注册插件进行路由表的自动加载，缩短初始化时间解决应用加固导致无法直接访问 dex 文件，初始化失败的问题
//        classpath "com.alibaba:arouter-register:1.0.2"
        //HMS
//        classpath 'com.huawei.agconnect:agcp:1.2.0.300'

        //java1.8支持
//        classpath 'me.tatarka:gradle-retrolambda:3.7.0'

        //fat-aar打包
//        classpath 'com.github.kezong:fat-aar:1.3.8'

//        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.6'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    /**
     * 限定所有子类xml中的资源文件的前缀
     * 注意：图片资源，限定失效，需要手动添加前缀
     * */
    subprojects {
        afterEvaluate {
            android {
                resourcePrefix "${project.name}_"
            }
        }
    }

}

allprojects {
    repositories {
        google()
//        jcenter()
        mavenCentral()
        //国内镜像
        maven {
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven {
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }

        maven { url "https://jitpack.io" }

        //HMS
        maven { url 'https://developer.huawei.com/repo/' }

        maven { url 'https://repo1.maven.org/maven2/' }
        flatDir {
            dirs 'libs'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}